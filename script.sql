set search_path to public;
CREATE TABLE cliente (
	CODC SERIAL NOT NULL,
	CPF VARCHAR(14),
	NOME VARCHAR(150),
	ENDERECO VARCHAR(200),
	DATANASC DATE,
	SEXO VARCHAR(1),
	TELEFONEFIXO VARCHAR(13),
	TELEFONECELULAR VARCHAR(13),
	CONSTRAINT PK_CLIENTE PRIMARY KEY (CODC)

);

CREATE TABLE TIPOVEICULO (
	CodTV SERIAL NOT NULL,
	Tamanho VARCHAR(14),
	NroPassageiros INTEGER,
	NroPortas INTEGER,
	ValorDiarioLocacao NUMERIC(10,2),
	ValorKmRodado NUMERIC(10,2),
	ValorFranquiaNormal NUMERIC(10,2),
	ValorFranquiaReduzida NUMERIC(10,2),
	ArCondicionado VARCHAR(10),
	CONSTRAINT PK_TIPOVEICULO PRIMARY KEY (CodTV)
);

CREATE TABLE VEICULO (
	Placa VARCHAR(7),
	Cor VARCHAR(20),
	Nro_Chassi VARCHAR(30),
	Nro_Motor VARCHAR(30),
	km_atual NUMERIC(10,2),
	Tipo BIGINT,
	CONSTRAINT PK_VEICULO PRIMARY KEY (Placa),
	CONSTRAINT FK_TIPOVEICULO_VEICULO FOREIGN KEY (Tipo)
		REFERENCES TIPOVEICULO(CodTV)
);

CREATE TABLE ALUGUEL
(
  placa VARCHAR (7) NOT NULL,
  codc bigint NOT NULL,
  dataretirada DATE,   
  datadevolucao DATE,
  tipofranquia VARCHAR(9),
  nrocnh bigint,
  datavencimentocnh DATE,
  CONSTRAINT pk_aluguel_placacliente PRIMARY KEY (placa, codc),
  CONSTRAINT fk_aluguel_clientecodc FOREIGN KEY (codc)
      REFERENCES cliente (codc) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_aluguel_veiculoplaca FOREIGN KEY (placa)
      REFERENCES veiculo (placa) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE RESERVA (
 CODR SERIAL NOT NULL,

 DATAPREVISTARETIRADA DATE,
 DATAPREVISTADEVOLUCAO DATE,
 LOCALRETIRADA VARCHAR(30),
 CODC BIGINT,
 CODTV BIGINT,
 CONSTRAINT pk_reserva PRIMARY KEY (CODR),
 CONSTRAINT FK_aluguel_veiculoplaca FOREIGN KEY (CODTV)
      REFERENCES TIPOVEICULO(CODTV),
 CONSTRAINT FK_aluguel_clientecodc FOREIGN KEY (CODC)
      REFERENCES CLIENTE(CODC)
);


--TABELA DE PERMISSÕES
CREATE TABLE USUARIO (
 USUARIO VARCHAR(20),
 SENHA VARCHAR(20),
 EHGERENTE BOOLEAN
);

--INSERINDO USUÁRIO
INSERT INTO USUARIO VALUES ('fabricio','123456',true);
INSERT INTO USUARIO VALUES ('atendente','123456',false);

--TRIGGER DE DELETAR RESERVA QUANDO INSERIDO O ALUGUEL
CREATE FUNCTION VerificaDeletaReserva() RETURNS trigger AS $VerificaDeletaReserva$
    BEGIN
	DELETE FROM RESERVA WHERE CODC = NEW.CODC;
	
        RETURN NEW;
    END;
$VerificaDeletaReserva$ LANGUAGE plpgsql;

CREATE TRIGGER VerifDelReserva AFTER INSERT ON ALUGUEL
    FOR EACH ROW EXECUTE PROCEDURE VerificaDeletaReserva();
	
	